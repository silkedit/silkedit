#
# CrashReporter cmake file
#

project(CrashReporter)

set(BUGSPLAT_URL $ENV{BUGSPLAT_URL})
message(STATUS "BUGSPLAT_URL: ${BUGSPLAT_URL}")

# configure a header file to pass some of the CMake settings to the source code
configure_file(
    "${PROJECT_SOURCE_DIR}/src/constants.h.in"
    "${PROJECT_BINARY_DIR}/src/constants.h"
)

file(GLOB_RECURSE CRASHREPORTER_SOURCES src/*.cpp src/*.c)
file(GLOB_RECURSE CRASHREPORTER_HEADERS src/*.h)
file(GLOB_RECURSE CRASHREPORTER_UIS src/*.ui)
file(GLOB CRASHREPORTER_TRANSLATIONS trans/*.ts)

qt5_add_translation(CRASHREPORTER_QM_FILES ${CRASHREPORTER_TRANSLATIONS})

include_directories(SYSTEM
  # for constants.h generated by CMake
  ${PROJECT_BINARY_DIR}/src
)

#build
if (APPLE)

  set_source_files_properties( ${CRASHREPORTER_QM_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION Resources/translations)

  add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${CRASHREPORTER_SOURCES} ${CRASHREPORTER_HEADERS} ${CRASHREPORTER_UIS} ${CRASHREPORTER_QM_FILES})

else ()
  # to avoid creating Release/Debug subdirectories using MSVC.
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}")
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}")
  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}")
  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}")
  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}")
  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}")

  set( CRASHREPORTER_ICON res/crashreporter.rc)

  add_executable(${PROJECT_NAME} WIN32 ${CRASHREPORTER_SOURCES} ${CRASHREPORTER_HEADERS} ${CRASHREPORTER_UIS} ${CRASHREPORTER_QM_FILES} ${CRASHREPORTER_ICON})

endif ()

target_link_libraries(${PROJECT_NAME} Qt5::Widgets Qt5::Network)
